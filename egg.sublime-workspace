{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"handleColli",
				"handleColliderCenter"
			],
			[
				"abo",
				"aboveLayersDepth"
			],
			[
				"ro",
				"rotation	phoenix.Quaternion"
			],
			[
				"app",
				"applyQuaternion	function"
			],
			[
				"scaleD",
				"scaleDeltOnParent"
			],
			[
				"scaleDel",
				"scaleDeltOnChild"
			],
			[
				"lo",
				"localUp	function"
			],
			[
				"rig",
				"rightComp"
			],
			[
				"scal",
				"scaleDeltOnParent"
			],
			[
				"tra",
				"transform"
			],
			[
				"nor",
				"normalized	phoenix.Vector"
			],
			[
				"mul",
				"multiplyScalar	function"
			],
			[
				"mult",
				"multiply	function"
			],
			[
				"get",
				"getChildrenAsPolys"
			],
			[
				"chid",
				"childList"
			],
			[
				"child",
				"childList"
			],
			[
				"thum",
				"thumbnailPoly"
			],
			[
				"dep",
				"setDepthsRecursive	function"
			],
			[
				"pol",
				"PolygonGroupExtender	PolygonGroupExtender"
			],
			[
				"setD",
				"setDepthsRecursive	function"
			],
			[
				"wo",
				"world	phoenix.Spatial"
			],
			[
				"d",
				"dot	function"
			],
			[
				"u",
				"up	function"
			],
			[
				"t",
				"transform	luxe.Transform"
			],
			[
				"tmpP",
				"tmpParentRotZ"
			],
			[
				"sc",
				"scale	luxe.Vector"
			],
			[
				"to",
				"toLocalSpace"
			],
			[
				"sele",
				"selectedVertex"
			],
			[
				"worl",
				"worldVectorToLocalSpace	function"
			],
			[
				"wor",
				"worldVectorToLocalSpace	function"
			],
			[
				"spac",
				"worldVectorToLocalSpace	function"
			],
			[
				"thu",
				"thumbHeight"
			],
			[
				"thumb",
				"thumbWidth"
			],
			[
				"p",
				"points	Array<luxe.Vector>"
			],
			[
				"cur",
				"curLayer	Int"
			],
			[
				"cu",
				"curLayer	Int"
			],
			[
				"upda",
				"updateSelectedLayerHandles"
			],
			[
				"close",
				"closestLayer"
			],
			[
				"uiS",
				"uiSceneBatcher	phoenix.Batcher"
			],
			[
				"po",
				"pos	luxe.Vector"
			],
			[
				"pare",
				"parent"
			],
			[
				"chil",
				"children"
			],
			[
				"depth",
				"depthIncrement"
			],
			[
				"de",
				"depth	Float"
			],
			[
				"dept",
				"depthIncrement"
			],
			[
				"Po",
				"PolygonGroupExtender	PolygonGroupExtender"
			],
			[
				"dy",
				"DynamicExtender"
			],
			[
				"Pol",
				"polysInGroup"
			],
			[
				"issel",
				"isSelectedGroup"
			],
			[
				"isS",
				"isSelectedLayer"
			],
			[
				"closes",
				"closestLayerToGroupHandle"
			],
			[
				"clso",
				"closestLayerToGroupHandle"
			],
			[
				"group",
				"closestLayerToGroupHandle"
			],
			[
				"bau",
				"enterGroupBauble"
			],
			[
				"ui",
				"uiSceneBatcher	phoenix.Batcher"
			],
			[
				"Re",
				"RectangleGeometry"
			],
			[
				"re",
				"rectangle"
			],
			[
				"clam",
				"clampedHeight"
			],
			[
				"getr",
				"getRectCollisionBounds"
			],
			[
				"uisc",
				"uiSceneBatcher	phoenix.Batcher"
			],
			[
				"component",
				"componentData"
			],
			[
				"bat",
				"uiSceneBatcher	phoenix.Batcher"
			],
			[
				"compon",
				"componentsOnlyFromScene"
			],
			[
				"set",
				"set_pickedColor	function"
			],
			[
				"remove",
				"remove_batch"
			],
			[
				"playmo",
				"playModeUIScene"
			],
			[
				"playmodeui",
				"playModeUIBatcher"
			],
			[
				"playmode",
				"playModeUICamera"
			],
			[
				"rem",
				"remove"
			],
			[
				"rmove",
				"removeComponentCollisionBoxes"
			],
			[
				"comp",
				"components"
			],
			[
				"addCo",
				"addCollisionBounds"
			],
			[
				"Collion",
				"CollisionPoly"
			],
			[
				"compone",
				"componentNames"
			],
			[
				"inpu",
				"selectLayerInput	function"
			],
			[
				"Coll",
				"CollisionPoly"
			],
			[
				"na",
				"name	String"
			],
			[
				"rota",
				"rotation_z	Float"
			],
			[
				"ac",
				"activate"
			],
			[
				"com",
				"componentName"
			],
			[
				"acti",
				"activeColor"
			],
			[
				"remov",
				"remove_batch"
			],
			[
				"uis",
				"uiSceneBatcher	phoenix.Batcher"
			],
			[
				"uiSc",
				"uiScene"
			],
			[
				"is",
				"isSwitch"
			],
			[
				"bou",
				"collisionBounds	function"
			],
			[
				"Dyn",
				"DynamicExtender"
			],
			[
				"a",
				"added	Bool"
			],
			[
				"swit",
				"switchLayerSelection"
			],
			[
				"b",
				"batcher	phoenix.Batcher"
			],
			[
				"ge",
				"get"
			],
			[
				"parent",
				"parentPoly"
			],
			[
				"divid",
				"divideScalar	function"
			],
			[
				"col",
				"collisionBounds	function"
			],
			[
				"gro",
				"groupCollisionArea"
			],
			[
				"start",
				"startGroupPos"
			],
			[
				"Col",
				"Collision"
			],
			[
				"over",
				"override"
			],
			[
				"c",
				"clone	function"
			],
			[
				"test",
				"test2"
			],
			[
				"i",
				"io	snow.io.IO"
			],
			[
				"divi",
				"divideScalar	function"
			],
			[
				"polygon",
				"Polygon"
			],
			[
				"ver",
				"vertexDisplacements"
			],
			[
				"update",
				"updatedVertPos"
			],
			[
				"wei",
				"weights"
			],
			[
				"no",
				"normalized	phoenix.Vector"
			],
			[
				"total",
				"totalWeight"
			],
			[
				"we",
				"weights"
			],
			[
				"ske",
				"skeletonMap"
			],
			[
				"sk",
				"skeletonMap"
			],
			[
				"skel",
				"skeleton"
			],
			[
				"skele",
				"skeleton"
			],
			[
				"world",
				"worldPos"
			],
			[
				"vert",
				"vertWorldPos"
			],
			[
				"wolr",
				"worldPos"
			],
			[
				"local",
				"localVectorToWorldSpace	function"
			],
			[
				"clo",
				"closestBone"
			],
			[
				"init",
				"initMeshToSkeletonMapping"
			],
			[
				"tol",
				"toLocalSpace	function"
			],
			[
				"di",
				"distance	function"
			],
			[
				"boneA",
				"boneArrayForSearch"
			],
			[
				"v",
				"view	phoenix.Camera"
			],
			[
				"e",
				"Entity	Entity"
			],
			[
				"wr",
				"wrap_angle"
			],
			[
				"star",
				"startRotZ"
			],
			[
				"tw",
				"tween"
			],
			[
				"Ge",
				"GenericActuator"
			]
		]
	},
	"buffers":
	[
		{
			"file": "egg_style.css",
			"settings":
			{
				"buffer_size": 4105,
				"line_ending": "Unix"
			}
		},
		{
			"file": "index.html",
			"settings":
			{
				"buffer_size": 9254,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "pack",
		"selected_items":
		[
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"colrosu",
				"Colorsublime: Install Theme"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"add repos",
				"Package Control: Add Repository"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"package",
				"Package Control: Remove Package"
			],
			[
				"package contorl: up",
				"Package Control: Upgrade Package"
			],
			[
				"pacakge control",
				"Package Control: List Packages"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"package cont",
				"Package Control: Add Repository"
			],
			[
				"package control u",
				"Package Control: Upgrade Package"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"add",
				"Package Control: Add Repository"
			],
			[
				"add repo",
				"Package Control: Add Repository"
			],
			[
				"package control: ",
				"Package Control: Install Package"
			]
		],
		"width": 448.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/Polygon.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/Main.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/Edit.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/components/LayerControl.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/Matrix.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/LayerManager.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/utilities/FileInputExtender.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/components/Animation.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/components/BallControl.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/components/PolygonCollider.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/components/JellyEdges.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/components/PuppetAnimation.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/components/TrailRenderer.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/Polyline.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/ColorPicker.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/Slider.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/animation/Bone.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/utilities/DynamicExtender.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/ledoux/UtilityBelt.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/utilities/Etc.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/utilities/TransformExtender.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/utilities/VectorExtender.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/utilities/PolylineExtender.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/extenders/TransformExtender.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/extenders/PolylineExtender.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/extenders/PolygonGroupExtender.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/extenders/FileInputExtender.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/extenders/DynamicExtender.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/extenders/VectorExtender.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/components/ButtonComponent.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/Polygon.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/ComponentManager.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/components/ColorModeSwitch.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/components/DropColor.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/components/PickUpColor.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/components/StartGame.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/components/MatchColorPicker.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/components/StopGame.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/components/SwitchToComponentMode.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/components/Save.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/components/SwitchToDrawMode.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/components/Load.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/components/Undo.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/components/Redo.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/components/SwitchToEditMode.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/components/ActivateableComponent.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/components/EditorComponent.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/components/TestComponent.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/IconButton.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/Main.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/VectorButton.hx",
		"/Users/adamrossledoux/Library/Application Support/Sublime Text 3/Packages/User/Distraction Free.sublime-settings",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/components/SimpleAnimation.hx",
		"/Users/adamrossledoux/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/animation/LinearActuator.hx",
		"/Users/adamrossledoux/Code/Haxe/libs/luxe/luxe/Visual.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/components/BounceEffect.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/components/PolygonCollision.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/components/EditorCollisionData.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/components/MosaicComponent.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/Copy.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/components/TestRotationComponent.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/TestComponent.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/EditorStates.hx",
		"/Users/adamrossledoux/Code/Haxe/LuxePolygonDraw/src/EditorState.hx",
		"/Users/adamrossledoux/Code/Web/Portfolio Website (2015)/index.html",
		"/Users/adamrossledoux/Code/Web/Javascript Libraries/ArlLib v3/ArlDraw.js",
		"/Users/adamrossledoux/Code/Haxe/_projects/LuxeColorPicker1/src/ledoux/UtilityBelt.hx",
		"/Users/adamrossledoux/Code/Haxe/_projects/LuxeColorPicker1/src/ledoux/UI.hx",
		"/Users/adamrossledoux/Code/Haxe/luxe/luxe/Entity.hx",
		"/Users/adamrossledoux/Code/Haxe/luxe/phoenix/Vector.hx",
		"/Users/adamrossledoux/Code/Haxe/luxe/phoenix/Color.hx",
		"/Users/adamrossledoux/Code/Haxe/luxe/luxe/Color.hx",
		"/Users/adamrossledoux/Code/Haxe/luxe/luxe/Draw.hx",
		"/Users/adamrossledoux/Code/Haxe/luxe/luxe/Game.hx",
		"/Users/adamrossledoux/Code/Haxe/luxe/luxe/Emitter.hx",
		"/Users/adamrossledoux/Code/Haxe/luxe/Luxe.hx",
		"/Users/adamrossledoux/Code/Haxe/luxe/luxe/Events.hx",
		"/Users/adamrossledoux/Code/Haxe/_projects/LuxeDraw/src/ledoux/Extenders.hx",
		"/Users/adamrossledoux/Code/Haxe/_projects/LuxeDraw/src/Extenders.hx",
		"/Users/adamrossledoux/Code/Haxe/luxe/phoenix/geometry/GeometryState.hx",
		"/Users/adamrossledoux/Code/Haxe/luxe/phoenix/geometry/Geometry.hx",
		"/Users/adamrossledoux/Code/Haxe/luxe/phoenix/geometry/QuadGeometry.hx",
		"/Users/adamrossledoux/Code/Haxe/luxe/phoenix/geometry/RectangleGeometry.hx",
		"/Users/adamrossledoux/Code/Haxe/_projects/LuxePong/src/Main.hx",
		"/Users/adamrossledoux/Code/Haxe/_projects/LuxePong/project.flow",
		"/Users/adamrossledoux/Code/Haxe/_projects/LuxePong/Assets.hx",
		"/Users/adamrossledoux/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/adamrossledoux/Code/Unity/paperpusher/Assets/Scripts/PHP/database.php"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"scale",
			"groupHandle",
			"editstate",
			"editstate(",
			"editgroup(",
			"ungroup(",
			"trace",
			"movelayer",
			"layerManager",
			"layers",
			"main.layer.set",
			"removeLaye",
			"layers",
			"LayerManager, layers",
			"LayerManager",
			"layermanager",
			"ledoux.UtilityBelt",
			"switchlayerselection(",
			"key_t",
			"enterGroupBauble",
			"groupifierBauble",
			"isGrouping",
			"switchlayerse",
			"load(",
			"draw.line",
			"manager.json",
			"manager.jsonrep",
			"componentManager",
			"curColorIcon",
			"machine.set(",
			"component\"",
			"luxe.camera",
			"new Bone",
			"enterplaymode",
			"trace",
			"editstate",
			"onmouse",
			"createui",
			"createui(",
			"camera",
			"createui",
			"machine",
			"trace",
			"recenter",
			"createUI",
			"boneBatcher",
			"batcher",
			"recenter",
			"getBounds",
			"polycollision",
			"startlayerdrag",
			".points",
			"clone",
			"tolocalspace",
			"new polygon",
			"center",
			"file",
			"log",
			"minLineLength",
			"closestPoint(",
			"closestPoint",
			"boneArray",
			"boneList",
			"removelayer",
			"destroy",
			"input.mousedown",
			"uiBatcher",
			"ios",
			"key_b",
			"trace",
			"distance",
			"ios",
			"luxe.camera.center =",
			"scene.add",
			"cast",
			"clone(",
			"Extender",
			"VectorExtender",
			"polyCollision",
			"collisionpoly",
			"openfilename",
			"addSelectedLayerToComponentManager",
			".options",
			"addEntity",
			"addcir",
			"new Polygon",
			"getJsonRepresentation",
			"worldspace",
			"pointinpoly",
			"splitPolyline",
			"findIntersections",
			"splitPolyline",
			"findPolylineIntersections",
			"isPickingColor",
			"app.",
			"EditorState",
			"edit",
			"(curLayer).color",
			"addlayeredit",
			"read",
			"input",
			"push",
			"polygon",
			"isPickingColor",
			"SwitchLayerSelection",
			"distfrom",
			"rad2deg",
			"renderer",
			"render_items",
			"topmost_child",
			"clone",
			"transform.pos",
			"onmousedown",
			"rad2",
			"deg2rad",
			"curColorHSV",
			"rotationto",
			"colorhsl {",
			"batcher"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"utilities",
			"enterGroupHandle",
			"groupHandle",
			"isGroupingLayers",
			"getRectBounds",
			"closestVertex(",
			"addSelectedLayerToComponentManagerInput",
			"addComponentToEntity",
			"addEntity",
			"jsonRepresentation",
			"polylineSplit",
			"polylineIntersections",
			"findIntersections",
			"",
			"PolygonDrawState",
			"EditorState",
			"switchLayerSelection",
			"curColor"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "egg_style.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4105,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9254,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 220.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/sublime_flow/flow.sublime-build",
	"project": "egg.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 400.0,
		"last_filter": "scale",
		"selected_items":
		[
			[
				"scale",
				"scaleHandles"
			],
			[
				"set_s",
				"set_scale"
			],
			[
				"scaleh",
				"scaleHandles"
			],
			[
				"switc",
				"switchLayerSelection"
			],
			[
				"merg",
				"mergeGroup"
			],
			[
				"exit",
				"exitCurrentGroup"
			],
			[
				"sete",
				"setDepths"
			],
			[
				"addlay",
				"AddLayer"
			],
			[
				"addpoin",
				"addPointToCurrentLine"
			],
			[
				"pointd",
				"pointDrawing"
			],
			[
				"start",
				"startScaleDrag"
			],
			[
				"arever",
				"areVerticesTooCloseToHandle"
			],
			[
				"ung",
				"unGroup"
			],
			[
				"rece",
				"recenter"
			],
			[
				"set",
				"setPoints"
			],
			[
				"setp",
				"setPoints"
			],
			[
				"ver",
				"vertexDrag"
			],
			[
				"layerd",
				"layerDrag"
			],
			[
				"editgr",
				"editGroup"
			],
			[
				"startver",
				"startVertexDrag"
			],
			[
				"un",
				"unGroup"
			],
			[
				"",
				"AddLayerEdit"
			],
			[
				"ungrou",
				"unGroup"
			],
			[
				"ungr",
				"unGroup"
			],
			[
				"ui",
				"createUI"
			],
			[
				"delete",
				"deleteLayerInput"
			],
			[
				"switch",
				"switchLayerSelection"
			],
			[
				"rectb",
				"getRectCollisionBounds"
			],
			[
				"startdr",
				"startDrawing"
			],
			[
				"creat",
				"createUI"
			],
			[
				"create",
				"createUI"
			],
			[
				"load",
				"saveLoadInput"
			],
			[
				"closest",
				"closestPoint"
			],
			[
				"curp",
				"curPoly"
			],
			[
				"updateb",
				"updateBoneArray"
			],
			[
				"rotat",
				"startRotationDrag"
			],
			[
				"resi",
				"onwindowresized"
			],
			[
				"resize",
				"onwindowresized"
			],
			[
				"save",
				"saveLoadInput"
			],
			[
				"addci",
				"addCircleInput"
			],
			[
				"inpu",
				"addSelectedLayerToComponentManagerInput"
			],
			[
				"input",
				"addSelectedLayerToComponentManagerInput"
			],
			[
				"component",
				"addSelectedLayerToComponentManager"
			],
			[
				"deac",
				"deactivateComponents"
			],
			[
				"creatu",
				"createUI"
			],
			[
				"rotation",
				"startRotationDrag"
			],
			[
				"startro",
				"startRotationDrag"
			],
			[
				"drawro",
				"drawRotationHandle"
			],
			[
				"drag",
				"scaleDrag"
			],
			[
				"dupli",
				"duplicateLayerInput"
			],
			[
				"layerdr",
				"layerDrag"
			],
			[
				"layer",
				"switchLayerSelection"
			],
			[
				"swit",
				"switchLayerSelection"
			],
			[
				"scen",
				"sceneDrag"
			],
			[
				"layerm",
				"LayerManager"
			],
			[
				"vecto",
				"VectorExtender"
			],
			[
				"circle",
				"CircleGeometry"
			]
		],
		"width": 400.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
